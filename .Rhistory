library(foreign)
write.dta(dataset_pscore2, "\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\dataset_pscore2.dta")
#Remove unneeded objects
rm(alert)
rm(ps.model)
rm(pscores)
rm(dataset_pscores)
rm(dataset_pscore2)
#List objects in memory
ls()
#2. Match exposed and unexposed individuals on propensity scores
#load package
library(MatchIt)
# Loading data in R format
dataset_pscore2<-readRDS(file="\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\dataset_pscore2")
#Check data
names(dataset_pscore2)
summary(dataset_pscore2)
View(dataset_pscore2)
# set rownames to id
rownames(dataset_pscore2) <- 1:81289
dataset_pscore2$id_num <- 1:81289
head(dataset_pscore2)
#Set seed so that same match is obtained every time
set.seed(12345)
# Matching attempt #1
# Nearest neighbor 1:2 matching using boosted CART estimated PS, 1:2,
# discarding treated or controls beyond range of PS overlap, exact matching on sex and pracid
match.1 <-  matchit(exposed ~ age + agecat + gender + imd2010_5 + hypertension + diabetes + mental_health + multmorbidity_score + multimorbid_cat + smoke_start + BMI_start + BMI_start_cat + GP_consult_start + GP_consult_start_cat + no_pres_3m_start + no_pres_3m_start_cat + long_term_pres_start + long_term_pres_start_cat + pres_rate_start + pres_rate_start_cat,
data=dataset_pscore2,
distance=dataset_pscore2$pscores,
method="nearest",
exact=c("gender", "pracid", "agecat"),
discard="both",
caliper=0.2,
ratio=2)
summary(match.1, standardize=T)
results.m1 <- summary(match.1, standardize=T) # Assign summary as object
rm(list = ls())
dataset$gender <- as.factor(dataset$gender)
dataset$imd2010_5 <- as.factor(dataset$imd2010_5)
dataset$smoke_start <- as.factor(dataset$smoke_start)
dataset$CVD_outcome <- as.factor(dataset$CVD_outcome)
dataset$BMI_start_cat <- as.factor(dataset$BMI_start_cat)
dataset$GP_consult_start_cat <- as.factor(GP_consult_start_cat)
dataset$no_pres_3m_start_cat <- as.factor(no_pres_3m_start_cat)
dataset$long_term_pres_start_cat <- as.factor(long_term_pres_start_cat)
dataset$pres_rate_start_cat<- as.factor(pres_rate_start_ca)
rm(list = ls())
#read data into memory
dataset <- read.csv("\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\Propensity_database_R.csv", header=T)
ls()
View(dataset)
names(dataset)
dataset$gender <- as.factor(dataset$gender)
dataset$imd2010_5 <- as.factor(dataset$imd2010_5)
dataset$smoke_start <- as.factor(dataset$smoke_start)
dataset$CVD_outcome <- as.factor(dataset$CVD_outcome)
dataset$BMI_start_cat <- as.factor(dataset$BMI_start_cat)
dataset$GP_consult_start_cat <- as.factor(GP_consult_start_cat)
dataset$no_pres_3m_start_cat <- as.factor(no_pres_3m_start_cat)
dataset$long_term_pres_start_cat <- as.factor(long_term_pres_start_cat)
dataset$pres_rate_start_cat<- as.factor(pres_rate_start_cat)
dataset$GP_consult_start_cat <- as.factor(dataset$GP_consult_start_cat)
dataset$no_pres_3m_start_cat <- as.factor(dataset$no_pres_3m_start_cat)
dataset$long_term_pres_start_cat <- as.factor(dataset$long_term_pres_start_cat)
dataset$pres_rate_start_cat<- as.factor(dataset$pres_rate_start_cat)
summary(dataset)
#run CART model to estimate propensity score (dont include variables you will do exact matching for)
library(twang) # for boosted CART - machine learning estimation of PS
ps.model <- ps(exposed ~ imd2010_5 + hypertension + diabetes + mental_health + multmorbidity_score + GP_consult_start + smoke_start + BMI_start + no_pres_3m_start + long_term_pres_start + pres_rate_start, data=dataset, n.trees=15000)
pscores <- ps.model$ps[, 1]
summary(ps.model)
plot(pscores)
pscores <- ps.model$ps[, 1]
summary(ps.model)
plot(pscores)
#save propensity scores as dataframe and view data
pscores_frame <- as.data.frame(pscores)
View(pscores_frame)
#combine dataset and pscores by columns and remove unneeded objects
dataset_pscores <- cbind(dataset, pscores_frame)
rm(dataset)
rm(pscores_frame)
View(dataset_pscores)
#Plot propensity score historgrams by treatment status
library(lattice)
histogram(~ pscores | exposed, data = dataset_pscores)
#Estimate mean propensity by treatment status
aggregate(dataset_pscores$pscores, by=list(dataset_pscores$exposed), mean)
# Generating categorical age variable to exact match
dataset_pscores$agecat<-cut(dataset_pscores$age, seq(10,110,5))
# generate a dataset without missing variable
dataset_pscore2 <- na.omit(dataset_pscores)
View(dataset_pscore2)
# saving in R format
saveRDS(dataset_pscore2, file="\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\dataset_pscore2")
# Saving in stata format
library(foreign)
write.dta(dataset_pscore2, "\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\dataset_pscore2.dta")
#Remove unneeded objects
rm(alert)
rm(ps.model)
rm(pscores)
rm(dataset_pscores)
rm(dataset_pscore2)
#List objects in memory
ls()
#2. Match exposed and unexposed individuals on propensity scores
#load package
library(MatchIt)
# Loading data in R format
dataset_pscore2<-readRDS(file="\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\dataset_pscore2")
#Check data
names(dataset_pscore2)
summary(dataset_pscore2)
View(dataset_pscore2)
# set rownames to id
rownames(dataset_pscore2) <- 1:81289
dataset_pscore2$id_num <- 1:81289
head(dataset_pscore2)
#Set seed so that same match is obtained every time
set.seed(12345)
# Matching attempt #1
# Nearest neighbor 1:2 matching using boosted CART estimated PS, 1:2,
# discarding treated or controls beyond range of PS overlap, exact matching on sex and pracid
match.1 <-  matchit(exposed ~ age + agecat + gender + imd2010_5 + hypertension + diabetes + mental_health + multmorbidity_score + multimorbid_cat + smoke_start + BMI_start + BMI_start_cat + GP_consult_start + GP_consult_start_cat + no_pres_3m_start + no_pres_3m_start_cat + long_term_pres_start + long_term_pres_start_cat + pres_rate_start + pres_rate_start_cat,
data=dataset_pscore2,
distance=dataset_pscore2$pscores,
method="nearest",
exact=c("gender", "pracid", "agecat"),
discard="both",
caliper=0.2,
ratio=2)
summary(match.1, standardize=T)
results.m1 <- summary(match.1, standardize=T) # Assign summary as object
match.2 <-  matchit(exposed ~ age + agecat + gender + imd2010_5 + hypertension + diabetes + mental_health + multmorbidity_score + multimorbid_cat + smoke_start + BMI_start + BMI_start_cat + GP_consult_start + GP_consult_start_cat + no_pres_3m_start + no_pres_3m_start_cat + long_term_pres_start + long_term_pres_start_cat + pres_rate_start + pres_rate_start_cat,
data=dataset_pscore2,
distance=dataset_pscore2$pscores,
method="nearest",
exact=c("gender", "pracid", "agecat"),
discard="both",
caliper=0.25,
ratio=2)
summary(match.2, standardize=T)
results.m2 <- summary(match.2, standardize=T) # Assign summary as object
#load package
library(MatchIt)
#clear existing objects from memory
rm(list = ls())
#read data into memory
dataset <- read.csv("\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\Propensity_database_R.csv", header=T)
ls()
View(dataset)
names(dataset)
# create dataset with limited subset of covariates
# remember that CaSE matters in R
#  gender = 1/2/3 male/female/ind
#  smoke_start = 1/2 ever/never
# make sure factor variables are factors
dataset$gender <- as.factor(dataset$gender)
dataset$imd2010_5 <- as.factor(dataset$imd2010_5)
dataset$smoke_start <- as.factor(dataset$smoke_start)
dataset$CVD_outcome <- as.factor(dataset$CVD_outcome)
dataset$BMI_start_cat <- as.factor(dataset$BMI_start_cat)
dataset$GP_consult_start_cat <- as.factor(dataset$GP_consult_start_cat)
dataset$no_pres_3m_start_cat <- as.factor(dataset$no_pres_3m_start_cat)
dataset$long_term_pres_start_cat <- as.factor(dataset$long_term_pres_start_cat)
dataset$pres_rate_start_cat<- as.factor(dataset$pres_rate_start_cat)
dataset$ethnic_cat2 <- as.factor(dataset$ethnic_cat2)
dataset$alcstatus <- as.factor(dataset$alcstatus)
dataset$alclevel <- as.factor(dataset$alclevel)
dataset$BPsystolic_start_cat <- as.factor(dataset$BPsystolic_start_cat)
dataset$age_cat <- as.factor(dataset$age_cat)
# do a quick summary of the data
summary(dataset)
#Estimate mean propensity by treatment status
aggregate(dataset_pscores$pscores, by=list(dataset_pscores$exposed), mean)
#Set seed so that same match is obtained every time
set.seed(12345)
aggregate(dataset$PS, by=list(dataset$exposed), mean)
#Set seed so that same match is obtained every time
set.seed(12345)
match.1 <-  matchit(exposed ~ age + age_cat + gender + imd2010_5 + ethnic_cat2 + smoke_start + alcstatus + alclevel + BMI_start + BMI_start_cat + BPsystolic_start + BPsystolic_start_cat + multmorbidity_score + multimorbid_cat + diabetes + hypertension + mental_health + GP_consult_start + GP_consult_start_cat + no_pres_3m_start + no_pres_3m_start_cat + long_term_pres_start + long_term_pres_start_cat + pres_rate_start + pres_rate_start_cat,
data=dataset,
distance=dataset$PS,
method="nearest",
exact=c("gender", "pracid", "age_cat"),
discard="both",
caliper=0.2,
ratio=2)
summary(match.1, standardize=T)
results.m1 <- summary(match.1, standardize=T) # Assign summary as object
match.1 <-  matchit(exposed ~ age + age_cat + gender + multmorbidity_score + multimorbid_cat + diabetes + hypertension + mental_health + GP_consult_start + GP_consult_start_cat + no_pres_3m_start + no_pres_3m_start_cat + long_term_pres_start + long_term_pres_start_cat + pres_rate_start + pres_rate_start_cat,
data=dataset,
distance=dataset$PS,
method="nearest",
exact=c("gender", "pracid", "age_cat"),
discard="both",
caliper=0.2,
ratio=2)
summary(match.1, standardize=T)
results.m1 <- summary(match.1, standardize=T) # Assign summary as object
View(dataset)
rm(list = ls())
dataset <- read.csv("\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\Propensity_database_R.csv", header=T)
ls()
View(dataset)
names(dataset)
#clear existing objects from memory
rm(list = ls())
#read data into memory
dataset <- read.csv("\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\Propensity_database_R.csv", header=T)
ls()
View(dataset)
names(dataset)
# create dataset with limited subset of covariates
# remember that CaSE matters in R
#  gender = 1/2/3 male/female/ind
#  smoke_start = 1/2 ever/never
# make sure factor variables are factors
dataset$gender <- as.factor(dataset$gender)
dataset$imd2010_5 <- as.factor(dataset$imd2010_5)
dataset$smoke_start <- as.factor(dataset$smoke_start)
dataset$CVD_outcome <- as.factor(dataset$CVD_outcome)
dataset$BMI_start_cat <- as.factor(dataset$BMI_start_cat)
dataset$GP_consult_start_cat <- as.factor(dataset$GP_consult_start_cat)
dataset$no_pres_3m_start_cat <- as.factor(dataset$no_pres_3m_start_cat)
dataset$long_term_pres_start_cat <- as.factor(dataset$long_term_pres_start_cat)
dataset$pres_rate_start_cat<- as.factor(dataset$pres_rate_start_cat)
dataset$ethnic_cat2 <- as.factor(dataset$ethnic_cat2)
dataset$alcstatus <- as.factor(dataset$alcstatus)
dataset$alclevel <- as.factor(dataset$alclevel)
dataset$BPsystolic_start_cat <- as.factor(dataset$BPsystolic_start_cat)
dataset$age_cat <- as.factor(dataset$age_cat)
# generate a dataset without missing variable
dataset_2 <- na.omit(dataset)
View(dataset_2)
summary(dataset_2)
set.seed(12345)
# Matching attempt #1
# Nearest neighbor 1:2 matching using boosted CART estimated PS, 1:2,
# discarding treated or controls beyond range of PS overlap, exact matching on sex and pracid
match.1 <-  matchit(exposed ~ age + age_cat + gender + imd2010_5 + ethnic_cat2 + smoke_start + alcstatus + alclevel + BMI_start + BMI_start_cat + BPsystolic_start + BPsystolic_start_cat + multmorbidity_score + multimorbid_cat + diabetes + hypertension + mental_health + GP_consult_start + GP_consult_start_cat + no_pres_3m_start + no_pres_3m_start_cat + long_term_pres_start + long_term_pres_start_cat + pres_rate_start + pres_rate_start_cat,
data=dataset,
distance=dataset$PS,
method="nearest",
exact=c("gender", "pracid", "age_cat"),
discard="both",
caliper=0.2,
ratio=2)
#clear existing objects from memory
rm(list = ls())
#read data into memory
dataset <- read.csv("\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\Propensity_database_R.csv", header=T)
ls()
View(dataset)
names(dataset)
# create dataset with limited subset of covariates
# remember that CaSE matters in R
#  gender = 1/2/3 male/female/ind
#  smoke_start = 1/2 ever/never
# make sure factor variables are factors
dataset$gender <- as.factor(dataset$gender)
dataset$imd2010_5 <- as.factor(dataset$imd2010_5)
dataset$smoke_start <- as.factor(dataset$smoke_start)
dataset$CVD_outcome <- as.factor(dataset$CVD_outcome)
dataset$BMI_start_cat <- as.factor(dataset$BMI_start_cat)
dataset$GP_consult_start_cat <- as.factor(dataset$GP_consult_start_cat)
dataset$no_pres_3m_start_cat <- as.factor(dataset$no_pres_3m_start_cat)
dataset$long_term_pres_start_cat <- as.factor(dataset$long_term_pres_start_cat)
dataset$pres_rate_start_cat<- as.factor(dataset$pres_rate_start_cat)
dataset$ethnic_cat2 <- as.factor(dataset$ethnic_cat2)
dataset$alcstatus <- as.factor(dataset$alcstatus)
dataset$alclevel <- as.factor(dataset$alclevel)
dataset$BPsystolic_start_cat <- as.factor(dataset$BPsystolic_start_cat)
dataset$age_cat <- as.factor(dataset$age_cat)
# generate a dataset without missing variable
dataset_2 <- na.omit(dataset)
View(dataset_2)
# do a quick summary of the data
summary(dataset_2)
#Set seed so that same match is obtained every time
set.seed(12345)
# Matching attempt #1
# Nearest neighbor 1:2 matching using boosted CART estimated PS, 1:2,
# discarding treated or controls beyond range of PS overlap, exact matching on sex and pracid
match.1 <-  matchit(exposed ~ age + age_cat + gender + imd2010_5 + ethnic_cat2 + smoke_start + alcstatus + alclevel + BMI_start + BMI_start_cat + BPsystolic_start + BPsystolic_start_cat + multmorbidity_score + multimorbid_cat + diabetes + hypertension + mental_health + GP_consult_start + GP_consult_start_cat + no_pres_3m_start + no_pres_3m_start_cat + long_term_pres_start + long_term_pres_start_cat + pres_rate_start + pres_rate_start_cat,
data=dataset,
distance=dataset$PS,
method="nearest",
exact=c("gender", "pracid", "age_cat"),
discard="both",
caliper=0.2,
ratio=2)
summary(match.1, standardize=T)
results.m1 <- summary(match.1, standardize=T) # Assign summary as object
match.2 <-  matchit(exposed ~ age + age_cat + gender + imd2010_5 + ethnic_cat2 + smoke_start + alcstatus + alclevel + BMI_start + BMI_start_cat + BPsystolic_start + BPsystolic_start_cat + multmorbidity_score + multimorbid_cat + diabetes + hypertension + mental_health + GP_consult_start + GP_consult_start_cat + no_pres_3m_start + no_pres_3m_start_cat + long_term_pres_start + long_term_pres_start_cat + pres_rate_start + pres_rate_start_cat,
data=dataset,
distance=dataset$PS,
method="nearest",
exact=c("gender", "pracid", "age_cat"),
discard="both",
caliper=0.3,
ratio=2)
summary(match.2, standardize=T)
results.m2 <- summary(match.2, standardize=T) # Assign summary as object
#List objects nested within the summary object
names(summary(match.1, standardise=T))
names(summary(match.2, standardise=T))
#Grab results from within the summary object
# match1
results.m1.sum.all <- results.m1$sum.all
results.m1.sum.matched <- results.m1$sum.matched
results.m1.sum.all
results.m1.sum.matched
class(results.m1.sum.all)
class(results.m1.sum.matched)
# match2
results.m2.sum.all <- results.m2$sum.all
results.m2.sum.matched <- results.m2$sum.matched
results.m2.sum.all
results.m2.sum.matched
class(results.m2.sum.all)
class(results.m2.sum.matched)
#Create new summary object containing only objects you need and write to CSV
# This is the CSV file that you can use to assess the quality of the match and involves
# comparing the standardised mean differences in covariate distributions between exposed
# and unexposed individuals between the whole dataset (before matching) and the matched
# dataset. This bit is done in excel and I can talk you through it via phone.
library(gtools)
results.m1 <- smartbind(results.m1.sum.all, results.m1.sum.matched)
write.table(results.m1 , file="\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\match1.v3_dataset.csv", sep=",", append=F)
results.m2 <- smartbind(results.m2.sum.all, results.m2.sum.matched)
write.table(results.m2 , file="\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\match2.v3_dataset.csv", sep=",", append=F)
#Assign the matched data to its own data frame
match.1.data <- match.data(match.1)
match.1.dataframe <- as.data.frame(match.1.data)
match.2.data <- match.data(match.2)
match.2.dataframe <- as.data.frame(match.2.data)
#Export matched datset as csv file for further analysis in Stata
write.csv(match.1.dataframe, file = "\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\CPRD_gold_init_match1v3_data.csv")
write.csv(match.2.dataframe, file = "\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\CPRD_gold_init_match2v3_data.csv")
library(MatchIt)
#clear existing objects from memory
rm(list = ls())
#read data into memory
dataset <- read.csv("\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\Propensity_database_R.csv", header=T)
ls()
View(dataset)
names(dataset)
# create dataset with limited subset of covariates
# remember that CaSE matters in R
#  gender = 1/2/3 male/female/ind
#  smoke_start = 1/2 ever/never
# make sure factor variables are factors
dataset$gender <- as.factor(dataset$gender)
dataset$imd2010_5 <- as.factor(dataset$imd2010_5)
dataset$smoke_start <- as.factor(dataset$smoke_start)
dataset$CVD_outcome <- as.factor(dataset$CVD_outcome)
dataset$BMI_start_cat <- as.factor(dataset$BMI_start_cat)
dataset$GP_consult_start_cat <- as.factor(dataset$GP_consult_start_cat)
dataset$no_pres_3m_start_cat <- as.factor(dataset$no_pres_3m_start_cat)
dataset$long_term_pres_start_cat <- as.factor(dataset$long_term_pres_start_cat)
dataset$pres_rate_start_cat<- as.factor(dataset$pres_rate_start_cat)
dataset$ethnic_cat2 <- as.factor(dataset$ethnic_cat2)
dataset$alcstatus <- as.factor(dataset$alcstatus)
dataset$alclevel <- as.factor(dataset$alclevel)
dataset$BPsystolic_start_cat <- as.factor(dataset$BPsystolic_start_cat)
dataset$age_cat <- as.factor(dataset$age_cat)
# generate a dataset without missing variable
dataset_2 <- na.omit(dataset)
View(dataset_2)
# do a quick summary of the data
summary(dataset_2)
#Set seed so that same match is obtained every time
set.seed(12345)
# Matching attempt #1
# Nearest neighbor 1:2 matching using boosted CART estimated PS, 1:2,
# discarding treated or controls beyond range of PS overlap, exact matching on sex and pracid
match.1 <-  matchit(exposed ~ age + age_cat + gender + imd2010_5 + ethnic_cat2 + smoke_start + alcstatus + alclevel + BMI_start + BMI_start_cat + BPsystolic_start + BPsystolic_start_cat + multmorbidity_score + multimorbid_cat + diabetes + hypertension + mental_health + GP_consult_start + GP_consult_start_cat + no_pres_3m_start + no_pres_3m_start_cat + long_term_pres_start + long_term_pres_start_cat + pres_rate_start + pres_rate_start_cat,
data=dataset,
distance=dataset$PS,
method="nearest",
exact=c("gender", "pracid", "age_cat"),
discard="both",
caliper=0.2,
ratio=2)
summary(match.1, standardize=T)
results.m1 <- summary(match.1, standardize=T) #
match.2 <-  matchit(exposed ~ age + age_cat + gender + imd2010_5 + ethnic_cat2 + smoke_start + alcstatus + alclevel + BMI_start + BMI_start_cat + BPsystolic_start + BPsystolic_start_cat + multmorbidity_score + multimorbid_cat + diabetes + hypertension + mental_health + GP_consult_start + GP_consult_start_cat + no_pres_3m_start + no_pres_3m_start_cat + long_term_pres_start + long_term_pres_start_cat + pres_rate_start + pres_rate_start_cat,
data=dataset,
distance=dataset$PS,
method="nearest",
exact=c("gender", "pracid", "age_cat"),
discard="both",
caliper=0.3,
ratio=2)
summary(match.2, standardize=T)
results.m2 <- summary(match.2, standardize=T) # Assign summary as object
match.3 <-  matchit(exposed ~ age + age_cat + gender + imd2010_5 + ethnic_cat2 + smoke_start + alcstatus + alclevel + BMI_start + BMI_start_cat + BPsystolic_start + BPsystolic_start_cat + multmorbidity_score + multimorbid_cat + diabetes + hypertension + mental_health + GP_consult_start + GP_consult_start_cat + no_pres_3m_start + no_pres_3m_start_cat + long_term_pres_start + long_term_pres_start_cat + pres_rate_start + pres_rate_start_cat,
data=dataset,
distance=dataset$PS,
method="nearest",
exact=c("gender", "pracid", "age_cat"),
discard="both",
caliper=0.1,
ratio=2)
summary(match.3, standardize=T)
results.m3 <- summary(match.3, standardize=T) # Assign summary as object
#List objects nested within the summary object
names(summary(match.1, standardise=T))
names(summary(match.2, standardise=T))
names(summary(match.3, standardise=T))
#Grab results from within the summary object
# match1
results.m1.sum.all <- results.m1$sum.all
results.m1.sum.matched <- results.m1$sum.matched
results.m1.sum.all
results.m1.sum.matched
class(results.m1.sum.all)
class(results.m1.sum.matched)
# match2
results.m2.sum.all <- results.m2$sum.all
results.m2.sum.matched <- results.m2$sum.matched
results.m2.sum.all
results.m2.sum.matched
class(results.m2.sum.all)
class(results.m2.sum.matched)
# match3
results.m3.sum.all <- results.m3$sum.all
results.m3.sum.matched <- results.m3$sum.matched
results.m3.sum.all
results.m3.sum.matched
class(results.m3.sum.all)
class(results.m3.sum.matched)
#Create new summary object containing only objects you need and write to CSV
# This is the CSV file that you can use to assess the quality of the match and involves
# comparing the standardised mean differences in covariate distributions between exposed
# and unexposed individuals between the whole dataset (before matching) and the matched
# dataset. This bit is done in excel and I can talk you through it via phone.
library(gtools)
results.m1 <- smartbind(results.m1.sum.all, results.m1.sum.matched)
write.table(results.m1 , file="\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\match1.v3_dataset.csv", sep=",", append=F)
results.m2 <- smartbind(results.m2.sum.all, results.m2.sum.matched)
write.table(results.m2 , file="\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\match2.v3_dataset.csv", sep=",", append=F)
results.m3 <- smartbind(results.m3.sum.all, results.m3.sum.matched)
write.table(results.m3 , file="\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\match3.v3_dataset.csv", sep=",", append=F)
#Assign the matched data to its own data frame
match.1.data <- match.data(match.1)
match.1.dataframe <- as.data.frame(match.1.data)
match.2.data <- match.data(match.2)
match.2.dataframe <- as.data.frame(match.2.data)
match.3.data <- match.data(match.2)
match.3.dataframe <- as.data.frame(match.2.data)
#Export matched datset as csv file for further analysis in Stata
write.csv(match.1.dataframe, file = "\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\CPRD_gold_init_match1v3_data.csv")
write.csv(match.2.dataframe, file = "\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\CPRD_gold_init_match2v3_data.csv")
write.csv(match.3.dataframe, file = "\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\CPRD_gold_init_match3v3_data.csv")
match.3.data <- match.data(match.3)
match.3.dataframe <- as.data.frame(match.3.data)
write.csv(match.3.dataframe, file = "\\\\ads.bris.ac.uk\\filestore\\HealthSci SafeHaven\\CPRD Projects UOB\\Projects\\17_184\\Data\\Main_clean\\Propensity score\\CPRD_gold_init_match3v3_data.csv")
library(magrittr)
# Define parameters ------------------------------------------------------------
## Study start date
study_start <- "2020-01-01"
## Load dataset
tmp <- arrow::read_feather(file = paste
tmp <- arrow::read_feather(file = paste0("C:/Users/rd16568/Documents/Github/post-covid-unvaccinated/output/input.feather"))
tmp <- arrow::read_feather(file = "C:/Users/rd16568/Documents/Github/post-covid-unvaccinated/output/input.feather")
df <- arrow::read_feather(file = "C:/Users/rd16568/Documents/Github/post-covid-unvaccinated/output/input.feather",
col_select = c("patient_id","death_date"))
library('tidyverse')
library('here')
library(tidyverse)
library(here)
library(rlang)
library(tidyverse)
library(magrittr)
study_start <- "2020-01-01"
df <- arrow::read_feather(file = "C:/Users/rd16568/Documents/Github/post-covid-unvaccinated/output/input.feather",
col_select = c("patient_id","death_date"))
install.packages("arrow")
library (arrow)
df <- arrow::read_feather(file = "C:/Users/rd16568/Documents/Github/post-covid-unvaccinated/output/input.feather",
col_select = c("patient_id","death_date"))
View(df)
View(df)
df <- arrow::read_feather(file = "C:/Users/rd16568/Documents/Github/post-covid-unvaccinated/output/input.feather")
View(df)
View(df)
## Study start date
study_start <- "2020-01-01"
df <- arrow::read_feather(file = "C:/Users/rd16568/Documents/Github/post-covid-unvaccinated/output/input.feather")
ls(df)
install.packages("arrow")
library (arrow)
install.packages("dplyr")
library(dplyr)
install.packages("tidyverse")
library(tidyverse)
install.packages("psych")
install.packages("arrow")
setwd("C:/Users/rd16568/Documents/Github/post-covid-unvaccinated")
ibrary(magrittr)
# Define parameters ------------------------------------------------------------
## Study start date
study_start <- "2020-01-01"
## Load dataset
df <- arrow::read_feather(file = "output/input.feather")
ls(df)
table(df$cov_cat_ethnicity)
