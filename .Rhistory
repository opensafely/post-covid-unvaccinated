[18]: paste0('Diabetes unspecified type (N = ', values$r, ')')
[19]: paste0('Diabetes unlikely (N = ', values$s, ')')
")
flow
library(readr); library(dplyr); library(data.table); library(lubridate)
# Study start and end date ------------------------------------------------
cohort_start = as.Date("2020-01-01", format="%Y-%m-%d")
cohort_end = as.Date("2021-06-18", format="%Y-%m-%d")
# Read active analyses -----------------------------------------------
active_analyses <- read_rds("lib/active_analyses.rds")
# Read data------------------------------------------------------------
input <- read_rds(paste0("output/input_stage1.rds"))
# cohort start date and end date
input <- input %>%
mutate(cohort_start_date = cohort_start,
cohort_end_date = cohort_end)
# Events and Table 2 df ------------------------------------------------------------------
event_dates_names <- active_analyses$outcome_variable[which(active_analyses$active==T)]
event_names <- event_names <- gsub("out_date_","",event_dates_names)
col_headings <- c("event", "event_count", "person_years_follow_up", "incidence_rate")
table_2 <- data.frame(matrix(ncol=length(col_headings), nrow=length(event_dates_names)))
colnames(table_2) <- col_headings
table_2$event <- event_names
# Build function for Table 2 ----------------------------------------------
summary_stats <- function(input, infection_subgroup, event_dates_names, index){
# event date
input <- input %>%
mutate(event_date = get(event_dates_names[index]))
# signify follow up end date
input <- input %>% rowwise() %>% mutate(follow_up_end = min(event_date, death_date, cohort_end_date, vax_date_eligible, vax_date_covid_1, na.rm = TRUE))
# follow-up days
input = input %>% mutate(follow_up_period = as.numeric((as.Date(follow_up_end) - as.Date(index_date)))+1)
# follow up period and follow up years
input = input %>% filter(follow_up_period >=1 & follow_up_period <= 535) # filter out follow up period
input = input %>% mutate(follow_up_years = follow_up_period / 365.2) # follow-up years
# Event count
if(infection_subgroup == "no_infection"){
event_count <- length(which((input$event_date >= input$index_date & input$event_date <= input$follow_up_end) &
(input$event_date < input$exp_date_covid19_confirmed | is.na(input$exp_date_covid19_confirmed))
))
}else{
event_count <- length(which(input$event_date   >= input$index_date &
input$event_date >= input$exp_date_covid19_confirmed &
input$event_date <= input$follow_up_end))
}
person_years_follow_up  = round(sum(input$follow_up_years, na.rm = TRUE), 1)
incidence_rate = round(event_count/person_years_follow_up, 4)
incidence_rate_lower = incidence_rate - 1.96 * sqrt(event_count/person_years_follow_up^2)
incidence_rate_upper = incidence_rate + 1.96 * sqrt(event_count/person_years_follow_up^2)
return(c(event_count, person_years_follow_up, incidence_rate, incidence_rate_lower, incidence_rate_upper))
}
for(i in 1:length(event_dates_names)){
table_2[i,2:6] <- summary_stats(input, "no_infection", event_dates_names, i)
table_2[i,7:11] <- summary_stats(input[input$sub_cat_covid19_hospital=="non_hospitalised",], "non_hospitalised", event_dates_names, i)
table_2[i,12:16] <- summary_stats(input[input$sub_cat_covid19_hospital=="hospitalised",], "hospitalised", event_dates_names, i)
table_2$total_event_count <- table_2[,2] + table_2[,7] + table_2[,12]
table_2$total_person_yrs <-  table_2[,3] + table_2[,8] + table_2[,13]
table_2$overall_incidence_rate <- round(table_2$total_event_count/table_2$total_person_yrs,4)
table_2$overall_incidence_rate_lower <- table_2$overall_incidence_rate - 1.96*sqrt(table_2$total_event_count/table_2$total_person_yrs^2)
table_2$overall_incidence_rate_upper <- table_2$overall_incidence_rate + 1.96*sqrt(table_2$total_event_count/table_2$total_person_yrs^2)
names(table_2)[2:6] <- c("no_infection_sub_event_count", "no_infection_sub_person_yrs_fp", "no_infection_sub_incidence_rate", "no_infection_sub_incidence_rate_lower", "no_infection_sub_incidence_rate_upper")
names(table_2)[7:11] <- c("non_hospitalised_sub_event_count", "non_hospitalised_sub_person_yrs_fp", "non_hospitalised_sub_incidence_rate", "non_hospitalised_sub_incidence_rate_lower","non_hospitalised_sub_incidence_rate_upper")
names(table_2)[12:16] <- c("hospitalised_sub_event_count", "hospitalised_sub_person_yrs_fp", "hospitalised_sub_incidence_rate", "hospitalised_sub_incidence_rate_lower", "hospitalised_sub_incidence_rate_upper")
names(table_2)[17:21] <- c("total_event_count", "total_person_yrs", "overall_incidence_rate", "overall_incidence_rate_lower", "overall_incidence_rate_upper")
}
# Low number suppression --------------------------------------------------
# change to "NA" if event count lower than or equal to 5
table_2[which(table_2$no_infection_sub_event_count <= 5), c(2,4,5,6)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$non_hospitalised_sub_event_count <= 5),c(7,9,10,11)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$hospitalised_sub_event_count <= 5),c(12,14,15,16)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$total_event_count <= 5),c(17,19,20,21)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$no_infection_sub_event_count == "<=5" | table_2$non_hospitalised_sub_event_count == "<=5" | table_2$hospitalised_sub_event_count == "<=5" ),c(17,19,20,21)] = c("<=5", "NA","NA","NA")
# OUTPUT ------------------------------------------------------------------
# Create output directory ------------------------------------------------------
fs::dir_create(here::here("lib"))
# Create empty data frame ------------------------------------------------------
df <- data.frame(active = logical(),
outcome = character(),
outcome_variable = character(),
covariates = character(),
model = character(),
main = character(),
covid_history = character(),
covid_pheno_hospitalised = character(),
covid_pheno_non_hospitalised = character(),
agegp_18_39 = character(),
agegp_40_59 = character(),
agegp_60_79 = character(),
agegp_80_110 = character(),
sex_Male = character(),
sex_Female = character(),
ethnicity_White = character(),
ethnicity_Mixed = character(),
ethnicity_South_Asian = character(),
ethnicity_Black = character(),
ethnicity_Other = character(),
ethnicity_Missing = character(),
prior_history_TRUE = character(),
prior_history_FALSE = character(),
prior_history_var = character(),
outcome_group = character(),
stringsAsFactors = FALSE)
# Add diabetes outcomes --------------------------------------------------------
outcomes <- c("type 1 diabetes",
"type 2 diabetes",
"other or non-specific diabetes",
"gestational diabetes")
outcomes_short <- c("diabetes_type1","diabetes_type2","diabetes_other","diabetes_gestational")
outcome_group <- "diabetes"
for (i in 1:length(outcomes)) {
df[nrow(df)+1,] <- c(TRUE,
outcomes[i],
paste0("out_date_",outcomes_short[i]),
"cov_num_consulation_rate;cov_bin_healthcare_worker;cov_num_age;cov_cat_ethnicity;cov_cat_deprivation;cov_cat_region;cov_cat_smoking_status;cov_bin_carehome_status;cov_bin_lipid_medications;cov_bin_antiplatelet_medications;cov_bin_anticoagulation_medications;cov_bin_combined_oral_contraceptive_pill;cov_bin_hormone_replacement_therapy;cov_bin_ami;cov_bin_all_stroke;cov_bin_other_arterial_embolism;cov_bin_vte;cov_bin_hf;cov_bin_angina;cov_bin_dementia;cov_bin_liver_disease;cov_bin_chronic_kidney_disease;cov_bin_cancer;cov_bin_hypertension;cov_bin_diabetes;cov_bin_obesity;cov_bin_depression;cov_bin_chronic_obstructive_pulmonary_disease;cov_cat_sex",
rep("all",2),
rep(TRUE,4),
rep(FALSE,13),
"",
outcome_group)
}
# Add mental health outcomes --------------------------------------------------------
outcomes <- c("Depression",
"Anxiety - general",
"Anxiety - obsessive compulsive disorder",
"Anxiety - post traumatic stress disorder",
"Eating disorders",
"Serious mental illness",
"Self harm, aged >=10",
"Self harm, aged >=15",
"Suicide",
"Addiction")
outcomes_short <- c("depression",
"anxiety_general",
"anxiety_ocd",
"anxiety_ptsd",
"eating_disorders",
"serious_mental_illness",
"self_harm_10plus",
"self_harm_15plus",
"suicide",
"addiction")
outcome_group <- "mental_health"
for (i in 1:length(outcomes)) {
df[nrow(df)+1,] <- c(FALSE,
outcomes[i],
paste0("out_date_",outcomes_short[i]),
rep("",21),
outcome_group)
}
# Save active analyses list ----------------------------------------------------
saveRDS(df, file = "lib/active_analyses.rds")
View(active_analyses)
fs::dir_create(here::here("lib"))
# Create empty data frame ------------------------------------------------------
df <- data.frame(active = logical(),
outcome = character(),
outcome_variable = character(),
covariates = character(),
model = character(),
main = character(),
covid_history = character(),
covid_pheno_hospitalised = character(),
covid_pheno_non_hospitalised = character(),
agegp_18_39 = character(),
agegp_40_59 = character(),
agegp_60_79 = character(),
agegp_80_110 = character(),
sex_Male = character(),
sex_Female = character(),
ethnicity_White = character(),
ethnicity_Mixed = character(),
ethnicity_South_Asian = character(),
ethnicity_Black = character(),
ethnicity_Other = character(),
ethnicity_Missing = character(),
prior_history_TRUE = character(),
prior_history_FALSE = character(),
prior_history_var = character(),
outcome_group = character(),
stringsAsFactors = FALSE)
# Add diabetes outcomes --------------------------------------------------------
outcomes <- c("type 1 diabetes",
"type 2 diabetes",
"other or non-specific diabetes",
"gestational diabetes")
outcomes_short <- c("diabetes_type1","diabetes_type2","diabetes_other","diabetes_gestational")
outcome_group <- "diabetes"
for (i in 1:length(outcomes)) {
df[nrow(df)+1,] <- c(TRUE,
outcomes[i],
paste0("out_date_",outcomes_short[i]),
"cov_num_consulation_rate;cov_bin_healthcare_worker;cov_num_age;cov_cat_ethnicity;cov_cat_deprivation;cov_cat_region;cov_cat_smoking_status;cov_bin_carehome_status;cov_bin_lipid_medications;cov_bin_antiplatelet_medications;cov_bin_anticoagulation_medications;cov_bin_combined_oral_contraceptive_pill;cov_bin_hormone_replacement_therapy;cov_bin_ami;cov_bin_all_stroke;cov_bin_other_arterial_embolism;cov_bin_vte;cov_bin_hf;cov_bin_angina;cov_bin_dementia;cov_bin_liver_disease;cov_bin_chronic_kidney_disease;cov_bin_cancer;cov_bin_hypertension;cov_bin_diabetes;cov_bin_obesity;cov_bin_depression;cov_bin_chronic_obstructive_pulmonary_disease;cov_cat_sex",
rep("all",2),
rep(TRUE,4),
rep(FALSE,13),
"",
outcome_group)
}
View(df)
outcomes <- c("Depression",
"Anxiety - general",
"Anxiety - obsessive compulsive disorder",
"Anxiety - post traumatic stress disorder",
"Eating disorders",
"Serious mental illness",
"Self harm, aged >=10",
"Self harm, aged >=15",
"Suicide",
"Addiction")
outcomes_short <- c("depression",
"anxiety_general",
"anxiety_ocd",
"anxiety_ptsd",
"eating_disorders",
"serious_mental_illness",
"self_harm_10plus",
"self_harm_15plus",
"suicide",
"addiction")
outcome_group <- "mental_health"
for (i in 1:length(outcomes)) {
df[nrow(df)+1,] <- c(FALSE,
outcomes[i],
paste0("out_date_",outcomes_short[i]),
rep("",21),
outcome_group)
}
View(df)
saveRDS(df, file = "lib/active_analyses.rds")
# Study start and end date ------------------------------------------------
cohort_start = as.Date("2020-01-01", format="%Y-%m-%d")
cohort_end = as.Date("2021-06-18", format="%Y-%m-%d")
# Read active analyses -----------------------------------------------
active_analyses <- read_rds("lib/active_analyses.rds")
# Read data------------------------------------------------------------
input <- read_rds(paste0("output/input_stage1.rds"))
# cohort start date and end date
input <- input %>%
mutate(cohort_start_date = cohort_start,
cohort_end_date = cohort_end)
# Events and Table 2 df ------------------------------------------------------------------
event_dates_names <- active_analyses$outcome_variable[which(active_analyses$active==T)]
event_names <- event_names <- gsub("out_date_","",event_dates_names)
col_headings <- c("event", "event_count", "person_years_follow_up", "incidence_rate")
table_2 <- data.frame(matrix(ncol=length(col_headings), nrow=length(event_dates_names)))
colnames(table_2) <- col_headings
table_2$event <- event_names
# Build function for Table 2 ----------------------------------------------
summary_stats <- function(input, infection_subgroup, event_dates_names, index){
# event date
input <- input %>%
mutate(event_date = get(event_dates_names[index]))
# signify follow up end date
input <- input %>% rowwise() %>% mutate(follow_up_end = min(event_date, death_date, cohort_end_date, vax_date_eligible, vax_date_covid_1, na.rm = TRUE))
# follow-up days
input = input %>% mutate(follow_up_period = as.numeric((as.Date(follow_up_end) - as.Date(index_date)))+1)
# follow up period and follow up years
input = input %>% filter(follow_up_period >=1 & follow_up_period <= 535) # filter out follow up period
input = input %>% mutate(follow_up_years = follow_up_period / 365.2) # follow-up years
# Event count
if(infection_subgroup == "no_infection"){
event_count <- length(which((input$event_date >= input$index_date & input$event_date <= input$follow_up_end) &
(input$event_date < input$exp_date_covid19_confirmed | is.na(input$exp_date_covid19_confirmed))
))
}else{
event_count <- length(which(input$event_date   >= input$index_date &
input$event_date >= input$exp_date_covid19_confirmed &
input$event_date <= input$follow_up_end))
}
person_years_follow_up  = round(sum(input$follow_up_years, na.rm = TRUE), 1)
incidence_rate = round(event_count/person_years_follow_up, 4)
incidence_rate_lower = incidence_rate - 1.96 * sqrt(event_count/person_years_follow_up^2)
incidence_rate_upper = incidence_rate + 1.96 * sqrt(event_count/person_years_follow_up^2)
return(c(event_count, person_years_follow_up, incidence_rate, incidence_rate_lower, incidence_rate_upper))
}
# Run function on outcomes ------------------------------------------------
for(i in 1:length(event_dates_names)){
table_2[i,2:6] <- summary_stats(input, "no_infection", event_dates_names, i)
table_2[i,7:11] <- summary_stats(input[input$sub_cat_covid19_hospital=="non_hospitalised",], "non_hospitalised", event_dates_names, i)
table_2[i,12:16] <- summary_stats(input[input$sub_cat_covid19_hospital=="hospitalised",], "hospitalised", event_dates_names, i)
table_2$total_event_count <- table_2[,2] + table_2[,7] + table_2[,12]
table_2$total_person_yrs <-  table_2[,3] + table_2[,8] + table_2[,13]
table_2$overall_incidence_rate <- round(table_2$total_event_count/table_2$total_person_yrs,4)
table_2$overall_incidence_rate_lower <- table_2$overall_incidence_rate - 1.96*sqrt(table_2$total_event_count/table_2$total_person_yrs^2)
table_2$overall_incidence_rate_upper <- table_2$overall_incidence_rate + 1.96*sqrt(table_2$total_event_count/table_2$total_person_yrs^2)
names(table_2)[2:6] <- c("no_infection_sub_event_count", "no_infection_sub_person_yrs_fp", "no_infection_sub_incidence_rate", "no_infection_sub_incidence_rate_lower", "no_infection_sub_incidence_rate_upper")
names(table_2)[7:11] <- c("non_hospitalised_sub_event_count", "non_hospitalised_sub_person_yrs_fp", "non_hospitalised_sub_incidence_rate", "non_hospitalised_sub_incidence_rate_lower","non_hospitalised_sub_incidence_rate_upper")
names(table_2)[12:16] <- c("hospitalised_sub_event_count", "hospitalised_sub_person_yrs_fp", "hospitalised_sub_incidence_rate", "hospitalised_sub_incidence_rate_lower", "hospitalised_sub_incidence_rate_upper")
names(table_2)[17:21] <- c("total_event_count", "total_person_yrs", "overall_incidence_rate", "overall_incidence_rate_lower", "overall_incidence_rate_upper")
}
# Low number suppression --------------------------------------------------
# change to "NA" if event count lower than or equal to 5
table_2[which(table_2$no_infection_sub_event_count <= 5), c(2,4,5,6)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$non_hospitalised_sub_event_count <= 5),c(7,9,10,11)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$hospitalised_sub_event_count <= 5),c(12,14,15,16)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$total_event_count <= 5),c(17,19,20,21)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$no_infection_sub_event_count == "<=5" | table_2$non_hospitalised_sub_event_count == "<=5" | table_2$hospitalised_sub_event_count == "<=5" ),c(17,19,20,21)] = c("<=5", "NA","NA","NA")
# OUTPUT ------------------------------------------------------------------
View(table_2)
View(active_analyses)
# Study start and end date ------------------------------------------------
cohort_start = as.Date("2020-01-01", format="%Y-%m-%d")
cohort_end = as.Date("2021-06-18", format="%Y-%m-%d")
# Read active analyses -----------------------------------------------
active_analyses <- read_rds("lib/active_analyses.rds")
# Read data------------------------------------------------------------
input <- read_rds(paste0("output/input_stage1.rds"))
# cohort start date and end date
input <- input %>%
mutate(cohort_start_date = cohort_start,
cohort_end_date = cohort_end)
# Events and Table 2 df ------------------------------------------------------------------
event_dates_names <- active_analyses$outcome_variable[which(active_analyses$active==T)]
event_names <- event_names <- gsub("out_date_","",event_dates_names)
col_headings <- c("event", "event_count", "person_years_follow_up", "incidence_rate")
table_2 <- data.frame(matrix(ncol=length(col_headings), nrow=length(event_dates_names)))
colnames(table_2) <- col_headings
table_2_labels <- active_analyses$outcome[which(active_analyses$active==T)]
table_2$event <- table_2_labels
View(table_2)
# Build function for Table 2 ----------------------------------------------
summary_stats <- function(input, infection_subgroup, event_dates_names, index){
# event date
input <- input %>%
mutate(event_date = get(event_dates_names[index]))
# signify follow up end date
input <- input %>% rowwise() %>% mutate(follow_up_end = min(event_date, death_date, cohort_end_date, vax_date_eligible, vax_date_covid_1, na.rm = TRUE))
# follow-up days
input = input %>% mutate(follow_up_period = as.numeric((as.Date(follow_up_end) - as.Date(index_date)))+1)
# follow up period and follow up years
input = input %>% filter(follow_up_period >=1 & follow_up_period <= 535) # filter out follow up period
input = input %>% mutate(follow_up_years = follow_up_period / 365.2) # follow-up years
# Event count
if(infection_subgroup == "no_infection"){
event_count <- length(which((input$event_date >= input$index_date & input$event_date <= input$follow_up_end) &
(input$event_date < input$exp_date_covid19_confirmed | is.na(input$exp_date_covid19_confirmed))
))
}else{
event_count <- length(which(input$event_date   >= input$index_date &
input$event_date >= input$exp_date_covid19_confirmed &
input$event_date <= input$follow_up_end))
}
person_years_follow_up  = round(sum(input$follow_up_years, na.rm = TRUE), 1)
incidence_rate = round(event_count/person_years_follow_up, 4)
incidence_rate_lower = incidence_rate - 1.96 * sqrt(event_count/person_years_follow_up^2)
incidence_rate_upper = incidence_rate + 1.96 * sqrt(event_count/person_years_follow_up^2)
return(c(event_count, person_years_follow_up, incidence_rate, incidence_rate_lower, incidence_rate_upper))
}
# Run function on outcomes ------------------------------------------------
for(i in 1:length(event_dates_names)){
table_2[i,2:6] <- summary_stats(input, "no_infection", event_dates_names, i)
table_2[i,7:11] <- summary_stats(input[input$sub_cat_covid19_hospital=="non_hospitalised",], "non_hospitalised", event_dates_names, i)
table_2[i,12:16] <- summary_stats(input[input$sub_cat_covid19_hospital=="hospitalised",], "hospitalised", event_dates_names, i)
table_2$total_event_count <- table_2[,2] + table_2[,7] + table_2[,12]
table_2$total_person_yrs <-  table_2[,3] + table_2[,8] + table_2[,13]
table_2$overall_incidence_rate <- round(table_2$total_event_count/table_2$total_person_yrs,4)
table_2$overall_incidence_rate_lower <- table_2$overall_incidence_rate - 1.96*sqrt(table_2$total_event_count/table_2$total_person_yrs^2)
table_2$overall_incidence_rate_upper <- table_2$overall_incidence_rate + 1.96*sqrt(table_2$total_event_count/table_2$total_person_yrs^2)
names(table_2)[2:6] <- c("no_infection_sub_event_count", "no_infection_sub_person_yrs_fp", "no_infection_sub_incidence_rate", "no_infection_sub_incidence_rate_lower", "no_infection_sub_incidence_rate_upper")
names(table_2)[7:11] <- c("non_hospitalised_sub_event_count", "non_hospitalised_sub_person_yrs_fp", "non_hospitalised_sub_incidence_rate", "non_hospitalised_sub_incidence_rate_lower","non_hospitalised_sub_incidence_rate_upper")
names(table_2)[12:16] <- c("hospitalised_sub_event_count", "hospitalised_sub_person_yrs_fp", "hospitalised_sub_incidence_rate", "hospitalised_sub_incidence_rate_lower", "hospitalised_sub_incidence_rate_upper")
names(table_2)[17:21] <- c("total_event_count", "total_person_yrs", "overall_incidence_rate", "overall_incidence_rate_lower", "overall_incidence_rate_upper")
}
# Low number suppression --------------------------------------------------
# change to "NA" if event count lower than or equal to 5
table_2[which(table_2$no_infection_sub_event_count <= 5), c(2,4,5,6)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$non_hospitalised_sub_event_count <= 5),c(7,9,10,11)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$hospitalised_sub_event_count <= 5),c(12,14,15,16)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$total_event_count <= 5),c(17,19,20,21)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$no_infection_sub_event_count == "<=5" | table_2$non_hospitalised_sub_event_count == "<=5" | table_2$hospitalised_sub_event_count == "<=5" ),c(17,19,20,21)] = c("<=5", "NA","NA","NA")
# OUTPUT ------------------------------------------------------------------
View(table_2)
cohort_start = as.Date("2020-01-01", format="%Y-%m-%d")
cohort_end = as.Date("2021-06-18", format="%Y-%m-%d")
# Read active analyses -----------------------------------------------
active_analyses <- read_rds("lib/active_analyses.rds")
# Read data------------------------------------------------------------
input <- read_rds(paste0("output/input_stage1.rds"))
# cohort start date and end date
input <- input %>%
mutate(cohort_start_date = cohort_start,
cohort_end_date = cohort_end)
# Events and Table 2 df ------------------------------------------------------------------
event_dates_names <- active_analyses$outcome_variable[which(active_analyses$active==T)]
event_names <- event_names <- gsub("out_date_","",event_dates_names)
col_headings <- c("event", "event_count", "person_years_follow_up", "incidence_rate")
table_2 <- data.frame(matrix(ncol=length(col_headings), nrow=length(event_dates_names)))
colnames(table_2) <- col_headings
event_dates_names <- active_analyses$outcome_variable[which(active_analyses$active==T)]
table_2$event <- event_names
# Build function for Table 2 ----------------------------------------------
summary_stats <- function(input, infection_subgroup, event_dates_names, index){
# event date
input <- input %>%
mutate(event_date = get(event_dates_names[index]))
# signify follow up end date
input <- input %>% rowwise() %>% mutate(follow_up_end = min(event_date, death_date, cohort_end_date, vax_date_eligible, vax_date_covid_1, na.rm = TRUE))
# follow-up days
input = input %>% mutate(follow_up_period = as.numeric((as.Date(follow_up_end) - as.Date(index_date)))+1)
# follow up period and follow up years
input = input %>% filter(follow_up_period >=1 & follow_up_period <= 535) # filter out follow up period
input = input %>% mutate(follow_up_years = follow_up_period / 365.2) # follow-up years
# Event count
if(infection_subgroup == "no_infection"){
event_count <- length(which((input$event_date >= input$index_date & input$event_date <= input$follow_up_end) &
(input$event_date < input$exp_date_covid19_confirmed | is.na(input$exp_date_covid19_confirmed))
))
}else{
event_count <- length(which(input$event_date   >= input$index_date &
input$event_date >= input$exp_date_covid19_confirmed &
input$event_date <= input$follow_up_end))
}
person_years_follow_up  = round(sum(input$follow_up_years, na.rm = TRUE), 1)
incidence_rate = round(event_count/person_years_follow_up, 4)
incidence_rate_lower = incidence_rate - 1.96 * sqrt(event_count/person_years_follow_up^2)
incidence_rate_upper = incidence_rate + 1.96 * sqrt(event_count/person_years_follow_up^2)
return(c(event_count, person_years_follow_up, incidence_rate, incidence_rate_lower, incidence_rate_upper))
}
# Run function on outcomes ------------------------------------------------
for(i in 1:length(event_dates_names)){
table_2[i,2:6] <- summary_stats(input, "no_infection", event_dates_names, i)
table_2[i,7:11] <- summary_stats(input[input$sub_cat_covid19_hospital=="non_hospitalised",], "non_hospitalised", event_dates_names, i)
table_2[i,12:16] <- summary_stats(input[input$sub_cat_covid19_hospital=="hospitalised",], "hospitalised", event_dates_names, i)
table_2$total_event_count <- table_2[,2] + table_2[,7] + table_2[,12]
table_2$total_person_yrs <-  table_2[,3] + table_2[,8] + table_2[,13]
table_2$overall_incidence_rate <- round(table_2$total_event_count/table_2$total_person_yrs,4)
table_2$overall_incidence_rate_lower <- table_2$overall_incidence_rate - 1.96*sqrt(table_2$total_event_count/table_2$total_person_yrs^2)
table_2$overall_incidence_rate_upper <- table_2$overall_incidence_rate + 1.96*sqrt(table_2$total_event_count/table_2$total_person_yrs^2)
names(table_2)[2:6] <- c("no_infection_sub_event_count", "no_infection_sub_person_yrs_fp", "no_infection_sub_incidence_rate", "no_infection_sub_incidence_rate_lower", "no_infection_sub_incidence_rate_upper")
names(table_2)[7:11] <- c("non_hospitalised_sub_event_count", "non_hospitalised_sub_person_yrs_fp", "non_hospitalised_sub_incidence_rate", "non_hospitalised_sub_incidence_rate_lower","non_hospitalised_sub_incidence_rate_upper")
names(table_2)[12:16] <- c("hospitalised_sub_event_count", "hospitalised_sub_person_yrs_fp", "hospitalised_sub_incidence_rate", "hospitalised_sub_incidence_rate_lower", "hospitalised_sub_incidence_rate_upper")
names(table_2)[17:21] <- c("total_event_count", "total_person_yrs", "overall_incidence_rate", "overall_incidence_rate_lower", "overall_incidence_rate_upper")
}
# Low number suppression --------------------------------------------------
# change to "NA" if event count lower than or equal to 5
table_2[which(table_2$no_infection_sub_event_count <= 5), c(2,4,5,6)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$non_hospitalised_sub_event_count <= 5),c(7,9,10,11)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$hospitalised_sub_event_count <= 5),c(12,14,15,16)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$total_event_count <= 5),c(17,19,20,21)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$no_infection_sub_event_count == "<=5" | table_2$non_hospitalised_sub_event_count == "<=5" | table_2$hospitalised_sub_event_count == "<=5" ),c(17,19,20,21)] = c("<=5", "NA","NA","NA")
View(table_2)
cohort_start = as.Date("2020-01-01", format="%Y-%m-%d")
cohort_end = as.Date("2021-06-18", format="%Y-%m-%d")
# Read active analyses -----------------------------------------------
active_analyses <- read_rds("lib/active_analyses.rds")
# Read data------------------------------------------------------------
input <- read_rds(paste0("output/input_stage1.rds"))
# cohort start date and end date
input <- input %>%
mutate(cohort_start_date = cohort_start,
cohort_end_date = cohort_end)
# Events and Table 2 df ------------------------------------------------------------------
event_dates_names <- active_analyses$outcome_variable[which(active_analyses$active==T)]
event_names <- event_names <- gsub("out_date_","",event_dates_names)
col_headings <- c("event", "event_count", "person_years_follow_up", "incidence_rate")
table_2 <- data.frame(matrix(ncol=length(col_headings), nrow=length(event_dates_names)))
colnames(table_2) <- col_headings
table_2_labels <- active_analyses$outcome[which(active_analyses$active==T)]
table_2$event <- table_2_labels
# Build function for Table 2 ----------------------------------------------
summary_stats <- function(input, infection_subgroup, event_dates_names, index){
# event date
input <- input %>%
mutate(event_date = get(event_dates_names[index]))
# signify follow up end date
input <- input %>% rowwise() %>% mutate(follow_up_end = min(event_date, death_date, cohort_end_date, vax_date_eligible, vax_date_covid_1, na.rm = TRUE))
# follow-up days
input = input %>% mutate(follow_up_period = as.numeric((as.Date(follow_up_end) - as.Date(index_date)))+1)
# follow up period and follow up years
input = input %>% filter(follow_up_period >=1 & follow_up_period <= 535) # filter out follow up period
input = input %>% mutate(follow_up_years = follow_up_period / 365.2) # follow-up years
# Event count
if(infection_subgroup == "no_infection"){
event_count <- length(which((input$event_date >= input$index_date & input$event_date <= input$follow_up_end) &
(input$event_date < input$exp_date_covid19_confirmed | is.na(input$exp_date_covid19_confirmed))
))
}else{
event_count <- length(which(input$event_date   >= input$index_date &
input$event_date >= input$exp_date_covid19_confirmed &
input$event_date <= input$follow_up_end))
}
person_years_follow_up  = round(sum(input$follow_up_years, na.rm = TRUE), 1)
incidence_rate = round(event_count/person_years_follow_up, 4)
incidence_rate_lower = incidence_rate - 1.96 * sqrt(event_count/person_years_follow_up^2)
incidence_rate_upper = incidence_rate + 1.96 * sqrt(event_count/person_years_follow_up^2)
return(c(event_count, person_years_follow_up, incidence_rate, incidence_rate_lower, incidence_rate_upper))
}
# Run function on outcomes ------------------------------------------------
for(i in 1:length(event_dates_names)){
table_2[i,2:6] <- summary_stats(input, "no_infection", event_dates_names, i)
table_2[i,7:11] <- summary_stats(input[input$sub_cat_covid19_hospital=="non_hospitalised",], "non_hospitalised", event_dates_names, i)
table_2[i,12:16] <- summary_stats(input[input$sub_cat_covid19_hospital=="hospitalised",], "hospitalised", event_dates_names, i)
table_2$total_event_count <- table_2[,2] + table_2[,7] + table_2[,12]
table_2$total_person_yrs <-  table_2[,3] + table_2[,8] + table_2[,13]
table_2$overall_incidence_rate <- round(table_2$total_event_count/table_2$total_person_yrs,4)
table_2$overall_incidence_rate_lower <- table_2$overall_incidence_rate - 1.96*sqrt(table_2$total_event_count/table_2$total_person_yrs^2)
table_2$overall_incidence_rate_upper <- table_2$overall_incidence_rate + 1.96*sqrt(table_2$total_event_count/table_2$total_person_yrs^2)
names(table_2)[2:6] <- c("no_infection_sub_event_count", "no_infection_sub_person_yrs_fp", "no_infection_sub_incidence_rate", "no_infection_sub_incidence_rate_lower", "no_infection_sub_incidence_rate_upper")
names(table_2)[7:11] <- c("non_hospitalised_sub_event_count", "non_hospitalised_sub_person_yrs_fp", "non_hospitalised_sub_incidence_rate", "non_hospitalised_sub_incidence_rate_lower","non_hospitalised_sub_incidence_rate_upper")
names(table_2)[12:16] <- c("hospitalised_sub_event_count", "hospitalised_sub_person_yrs_fp", "hospitalised_sub_incidence_rate", "hospitalised_sub_incidence_rate_lower", "hospitalised_sub_incidence_rate_upper")
names(table_2)[17:21] <- c("total_event_count", "total_person_yrs", "overall_incidence_rate", "overall_incidence_rate_lower", "overall_incidence_rate_upper")
}
# Low number suppression --------------------------------------------------
# change to "NA" if event count lower than or equal to 5
table_2[which(table_2$no_infection_sub_event_count <= 5), c(2,4,5,6)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$non_hospitalised_sub_event_count <= 5),c(7,9,10,11)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$hospitalised_sub_event_count <= 5),c(12,14,15,16)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$total_event_count <= 5),c(17,19,20,21)] = c("<=5", "NA", "NA", "NA")
table_2[which(table_2$no_infection_sub_event_count == "<=5" | table_2$non_hospitalised_sub_event_count == "<=5" | table_2$hospitalised_sub_event_count == "<=5" ),c(17,19,20,21)] = c("<=5", "NA","NA","NA")
View(table_2)
# save
write.csv(table_2, file= paste0("output/table2.csv"), row.names = F)
