print(Hmisc::describe(df))
sink()
# Convert dates to date format -------------------------------------------------
df <- df %>%
mutate_at(as.Date(vars(contains('_date'))))
df <- df %>%
mutate_at(vars(contains('_date')), as.Date(.==))
df <- df %>%
mutate_at(vars(contains('_date')), as.Date(.==)))
df <- df %>%
mutate_at(vars(contains('_date')), as.Date(.==))
mutate_at(vars(contains('_date')), as.Date(.==)
df <- df %>%
mutate_at(vars(contains('_date')), as.Date(.==)))
## Study start date
study_start <- "2020-01-01"
## Load dataset
df <- arrow::read_feather(file = "output/input.feather")
# Describe data --------------------------------------------------------------
sink(paste0("output/describe_input_studydefinition.txt"))
print(Hmisc::describe(df))
sink()
# Convert dates to date format -------------------------------------------------
df <- df %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.), format = '%Y%m%d')))
class(df$out_date_eating_disorders)
View(df)
study_start <- "2020-01-01"
## Load dataset
df <- arrow::read_feather(file = "output/input.feather")
# Describe data --------------------------------------------------------------
sink(paste0("output/describe_input_studydefinition.txt"))
print(Hmisc::describe(df))
sink()
## Study start date
study_start <- "2020-01-01"
## Load dataset
df <- arrow::read_feather(file = "output/input.feather")
# Describe data --------------------------------------------------------------
sink(paste0("output/describe_input_studydefinition.txt"))
print(Hmisc::describe(df))
sink()
# Convert dates to date format -------------------------------------------------
df <- df %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.))))
class(df$out_date_depression)
# Load libraries ---------------------------------------------------------------
library(magrittr)
library(tidyverse)
# Define parameters ------------------------------------------------------------
## Study start date
study_start <- "2020-01-01"
## Load dataset
df2 <- arrow::read_feather(file = "output/input.feather")
# Describe data --------------------------------------------------------------
sink(paste0("output/describe_input_studydefinition.txt"))
print(Hmisc::describe(df2))
sink()
# Convert dates to date format -------------------------------------------------
date_names <- tidyselect::vars_select(names(df2), contains(c('_date'), ignore.case = TRUE))
for (colname in date_names){
df2[[colname]] <- as.Date(df2[[colname]])
}
df2$qa_num_birth_year <- format(df2$qa_num_birth_year,"%Y")
View(df2)
View(df)
class(df$qa_num_birth_year)
df <- df %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year'), ~ format(as.character(.), "%Y")))
df <- df %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year')), format(., "%Y")))
df <- df %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year')), format(., "%Y"))
df <- df %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year'), ~format(.), "%Y"))
View(df)
## Study start date
study_start <- "2020-01-01"
## Load dataset
df <- arrow::read_feather(file = "output/input.feather")
# Describe data --------------------------------------------------------------
sink(paste0("output/describe_input_studydefinition.txt"))
print(Hmisc::describe(df))
sink()
# Convert dates to date format -------------------------------------------------
df <- df %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year'), ~format(.), "%Y"))
# Load libraries ---------------------------------------------------------------
library(magrittr)
library(tidyverse)
# Define parameters ------------------------------------------------------------
## Study start date
study_start <- "2020-01-01"
## Load dataset
df2 <- arrow::read_feather(file = "output/input.feather")
# Describe data --------------------------------------------------------------
sink(paste0("output/describe_input_studydefinition.txt"))
print(Hmisc::describe(df2))
sink()
# Convert dates to date format -------------------------------------------------
date_names <- tidyselect::vars_select(names(df2), contains(c('_date'), ignore.case = TRUE))
for (colname in date_names){
df2[[colname]] <- as.Date(df2[[colname]])
}
df2$qa_num_birth_year <- format(df2$qa_num_birth_year,"%Y")
View(df)
View(df2)
class(df2$qa_num_birth_year)
View(df)
## Study start date
study_start <- "2020-01-01"
## Load dataset
df <- arrow::read_feather(file = "output/input.feather")
# Describe data --------------------------------------------------------------
sink(paste0("output/describe_input_studydefinition.txt"))
print(Hmisc::describe(df))
sink()
# Convert dates to date format -------------------------------------------------
df <- df %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year'), ~format(as.Date(.), "%Y")))
class(df$qa_num_birth_year)
## Load dataset
df <- arrow::read_feather(file = "output/input.feather")
# Describe data --------------------------------------------------------------
sink(paste0("output/describe_input_studydefinition.txt"))
print(Hmisc::describe(df))
sink()
# format data columns -----------------------------------------------------
# Convert dates to date format -------------------------------------------------
df <- df %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year'), ~format(as.Date(.), "%Y"))) %>%
mutate(across(contrains('_num'), as.numeric(.)))
df <- df %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year'), ~ format(as.Date(.), "%Y"))) %>%
mutate(across(contrains('_num'), ~ as.numeric(.)))
df <- df %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year'), ~ format(as.Date(.), "%Y"))) %>%
mutate(across(contains('_num'), ~ as.numeric(.)))
View(df)
class(df$cov_num_age)
class(df$tmp_cov_num_max_hba1c_mmol_mol_date)
View(df)
df$tmp_cov_num_max_hba1c_mmol_mol_date
## Study start date
study_start <- "2020-01-01"
## Load dataset
df <- arrow::read_feather(file = "output/input.feather")
# Describe data --------------------------------------------------------------
sink(paste0("output/describe_input_studydefinition.txt"))
print(Hmisc::describe(df))
sink()
# format data columns -----------------------------------------------------
# Convert dates to date format -------------------------------------------------
df <- df %>%
mutate(across(contains('_num'), ~ as.numeric(.))) %>% # do numeric first because some date vars contain 'num'
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year'), ~ format(as.Date(.), "%Y")))
## Study start date
study_start <- "2020-01-01"
## Load dataset
df <- arrow::read_feather(file = "output/input.feather")
# Describe data --------------------------------------------------------------
sink(paste0("output/describe_input_studydefinition.txt"))
print(Hmisc::describe(df))
sink()
df <- df %>%
rename(tmp_cov_max_hba1c_mmol_mol_date = tmp_cov_num_max_hba1c_mmol_mol_date) %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year'), ~ format(as.Date(.), "%Y"))) %>%
mutate(across(contains('_num'), ~ as.numeric(.)))
View(df)
## Study start date
study_start <- "2020-01-01"
## Load dataset
df <- arrow::read_feather(file = "output/input.feather")
# Describe data --------------------------------------------------------------
sink(paste0("output/describe_input_studydefinition.txt"))
print(Hmisc::describe(df))
sink()
# format data columns -----------------------------------------------------
# Convert dates to date format -------------------------------------------------
df <- df %>%
rename(tmp_cov_max_hba1c_mmol_mol_date = tmp_cov_num_max_hba1c_mmol_mol_date) %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year'), ~ format(as.Date(.), "%Y"))) %>%
mutate(across(contains('_num'), ~ as.numeric(.))) %>%
mutate(across(contains('_cat'), ~ as.factor(.))) %>%
mutate(across(contains('_bin'), ~ as.logical(.)))
class(df$qa_num_birth_year)
class(df$cov_bin_hypertension)
# Load libraries ---------------------------------------------------------------
library(magrittr)
library(tidyverse)
# Define parameters ------------------------------------------------------------
## Study start date
study_start <- "2020-01-01"
## Load dataset
df2 <- arrow::read_feather(file = "output/input.feather")
# Describe data --------------------------------------------------------------
sink(paste0("output/describe_input_studydefinition.txt"))
print(Hmisc::describe(df2))
sink()
# Format columns -----------------------------------------------------
# dates, numerics, factors, logicals
df2 <- df2 %>%
rename(tmp_cov_max_hba1c_mmol_mol_date = tmp_cov_num_max_hba1c_mmol_mol_date) %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year'), ~ format(as.Date(.), "%Y"))) %>%
mutate(across(contains('_num'), ~ as.numeric(.))) %>%
mutate(across(contains('_cat'), ~ as.factor(.))) %>%
mutate(across(contains('_bin'), ~ as.logical(.)))
# Define COVID-19 severity --------------------------------------------------------------
df2 <- df2 %>%
mutate(sub_cat_covid19_hospital = )
df2$sub_cat_covid19_hospital <- "no_infection"
df2$sub_cat_covid19_hospital <- ifelse(!is.na(df2$exp_date_covid19_confirmed),
"non_hospitalised",df2$sub_cat_covid19_hospital)
df2$sub_cat_covid19_hospital <- ifelse(!is.na(df2$exp_date_covid19_confirmed) &
!is.na(df2$sub_date_covid19_hospital) &
(df2$sub_date_covid19_hospital-df2$exp_date_covid19_confirmed>=0 &
df2$sub_date_covid19_hospital-df2$exp_date_covid19_confirmed<29),
"hospitalised",df2$sub_cat_covid19_hospital)
df2$sub_cat_covid19_hospital <- as.factor(df2$sub_cat_covid19_hospital)
df2[,c("sub_date_covid19_hospital")] <- NULL
table(df2$sub_cat_covid19_hospital)
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(is.na(df$exp_date_covid19_confirmed)), "no_infection")
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(is.na(df$exp_date_covid19_confirmed)), "no_infection", NA)
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(is.na(df$exp_date_covid19_confirmed)), "no_infection", "yes")
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(is.na(df$exp_date_covid19_confirmed)==TRUE), "no_infection", "yes")
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(is.na(exp_date_covid19_confirmed)), "no_infection", "yes")
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(is.na(exp_date_covid19_confirmed), "no_infection", "yes"))
table(df$sub_cat_covid19_hospital)
table(df2$sub_cat_covid19_hospital)
# Define parameters ------------------------------------------------------------
## Study start date
study_start <- "2020-01-01"
## Load dataset
df <- arrow::read_feather(file = "output/input.feather")
# Describe data --------------------------------------------------------------
sink(paste0("output/describe_input_studydefinition.txt"))
print(Hmisc::describe(df))
sink()
# Format columns -----------------------------------------------------
# dates, numerics, factors, logicals
df <- df %>%
rename(tmp_cov_max_hba1c_mmol_mol_date = tmp_cov_num_max_hba1c_mmol_mol_date) %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year'), ~ format(as.Date(.), "%Y"))) %>%
mutate(across(contains('_num'), ~ as.numeric(.))) %>%
mutate(across(contains('_cat'), ~ as.factor(.))) %>%
mutate(across(contains('_bin'), ~ as.logical(.)))
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(is.na(exp_date_covid19_confirmed), "no_infection",
ifelse(sub_date_covid19_hospital - exp_date_covid19_confirmed >=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed < 29, "hospitalised")))
table(df2$sub_cat_covid19_hospital)
## Study start date
study_start <- "2020-01-01"
## Load dataset
df <- arrow::read_feather(file = "output/input.feather")
# Describe data --------------------------------------------------------------
sink(paste0("output/describe_input_studydefinition.txt"))
print(Hmisc::describe(df))
sink()
# Format columns -----------------------------------------------------
# dates, numerics, factors, logicals
df <- df %>%
rename(tmp_cov_max_hba1c_mmol_mol_date = tmp_cov_num_max_hba1c_mmol_mol_date) %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year'), ~ format(as.Date(.), "%Y"))) %>%
mutate(across(contains('_num'), ~ as.numeric(.))) %>%
mutate(across(contains('_cat'), ~ as.factor(.))) %>%
mutate(across(contains('_bin'), ~ as.logical(.)))
# Define COVID-19 severity --------------------------------------------------------------
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(is.na(exp_date_covid19_confirmed), "no_infection",
ifelse(sub_date_covid19_hospital - exp_date_covid19_confirmed >=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed < 29, "hospitalised",
"non_hospitalised")))
table(df2$sub_cat_covid19_hospital)
table(df$sub_cat_covid19_hospital)
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(is.na(exp_date_covid19_confirmed), "no_infection",
ifelse(!is.na(exp_date_covid19_confirmed)), "non_hospitalised",
ifelse(sub_date_covid19_hospital - exp_date_covid19_confirmed >=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed < 29, "hospitalised")))
## Study start date
study_start <- "2020-01-01"
## Load dataset
df <- arrow::read_feather(file = "output/input.feather")
# Describe data --------------------------------------------------------------
sink(paste0("output/describe_input_studydefinition.txt"))
print(Hmisc::describe(df))
sink()
# Format columns -----------------------------------------------------
# dates, numerics, factors, logicals
df <- df %>%
rename(tmp_cov_max_hba1c_mmol_mol_date = tmp_cov_num_max_hba1c_mmol_mol_date) %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year'), ~ format(as.Date(.), "%Y"))) %>%
mutate(across(contains('_num'), ~ as.numeric(.))) %>%
mutate(across(contains('_cat'), ~ as.factor(.))) %>%
mutate(across(contains('_bin'), ~ as.logical(.)))
# Define COVID-19 severity --------------------------------------------------------------
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(!is.na(exp_date_covid19_confirmed)), "non_hospitalised",
ifelse(sub_date_covid19_hospital - exp_date_covid19_confirmed >=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed < 29,
"hospitalised", "no_infection")))
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(!is.na(exp_date_covid19_confirmed)), "non_hospitalised",
ifelse(sub_date_covid19_hospital - exp_date_covid19_confirmed >=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed < 29,
"hospitalised", "no_infection"))
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(!is.na(exp_date_covid19_confirmed)), "non_hospitalised",
ifelse(sub_date_covid19_hospital - exp_date_covid19_confirmed >=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed < 29),
"hospitalised", "no_infection")
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(!is.na(exp_date_covid19_confirmed), "non_hospitalised",
ifelse(sub_date_covid19_hospital - exp_date_covid19_confirmed >=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed < 29,
"hospitalised", "no_infection")))
## Study start date
study_start <- "2020-01-01"
## Load dataset
df <- arrow::read_feather(file = "output/input.feather")
# Describe data --------------------------------------------------------------
sink(paste0("output/describe_input_studydefinition.txt"))
print(Hmisc::describe(df))
sink()
# Format columns -----------------------------------------------------
# dates, numerics, factors, logicals
df <- df %>%
rename(tmp_cov_max_hba1c_mmol_mol_date = tmp_cov_num_max_hba1c_mmol_mol_date) %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year'), ~ format(as.Date(.), "%Y"))) %>%
mutate(across(contains('_num'), ~ as.numeric(.))) %>%
mutate(across(contains('_cat'), ~ as.factor(.))) %>%
mutate(across(contains('_bin'), ~ as.logical(.)))
# Define COVID-19 severity --------------------------------------------------------------
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(!is.na(exp_date_covid19_confirmed), "non_hospitalised",
ifelse(sub_date_covid19_hospital - exp_date_covid19_confirmed >=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed < 29,
"hospitalised", "no_infection")))
table(df2$sub_cat_covid19_hospital)
table(df$sub_cat_covid19_hospital)
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(sub_date_covid19_hospital - exp_date_covid19_confirmed >=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed < 29, "hospitalised", "no"))
table(df$sub_cat_covid19_hospital)
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(sub_date_covid19_hospital - exp_date_covid19_confirmed >=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed < 29, "hospitalised",
ifelse(!is.na(exp_date_covid19_confirmed), "non_hospitalised", "no")))
table(df$sub_cat_covid19_hospital)
table(df2$sub_cat_covid19_hospital)
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(is.na(exp_date_covid19_confirmed), "no_infection", "yes"))
table(df2$sub_cat_covid19_hospital)
table(df$sub_cat_covid19_hospital)
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(is.na(exp_date_covid19_confirmed), "no_infection",
ifelse(!is.na(exp_date_covid19_confirmed), "non_hospitalised",
ifelse(sub_date_covid19_hospital - exp_date_covid19_confirmed >=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed < 29,
"hospitalised", NA))))
table(df$sub_cat_covid19_hospital)
table(df2$sub_cat_covid19_hospital)
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(is.na(exp_date_covid19_confirmed), "no_infection",
ifelse(sub_date_covid19_hospital - exp_date_covid19_confirmed >=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed < 29),
"non_hospitalised", "hospitalised")))
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(is.na(exp_date_covid19_confirmed), "no_infection",
ifelse(sub_date_covid19_hospital - exp_date_covid19_confirmed >=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed < 29,
"non_hospitalised", "hospitalised")))
table(df$sub_cat_covid19_hospital)
table(df2$sub_cat_covid19_hospital)
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(is.na(exp_date_covid19_confirmed), "no_infection",
ifelse(sub_date_covid19_hospital - exp_date_covid19_confirmed >=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed < 29,
"hospitalised",
ifelse(!is.na(exp_date_covid19_confirmed), "non_hospitalised", NA))))
table(df2$sub_cat_covid19_hospital)
table(df$sub_cat_covid19_hospital)
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(is.na(exp_date_covid19_confirmed), "no_infection",
ifelse(!is.na(exp_date_covid19_confirmed), "non_hospitalised", NA)))
table(df$sub_cat_covid19_hospital)
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(is.na(exp_date_covid19_confirmed), "no_infection",
ifelse(!is.na(exp_date_covid19_confirmed), "non_hospitalised",
ifelse(!is.na(exp_date_covid19_confirmed) &
!is.na(sub_date_covid19_hospital) &
sub_date_covid19_hospital - exp_date_covid19_confirmed>=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed<29, "hospitalised", NA))))
table(df$sub_cat_covid19_hospital)
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(is.na(exp_date_covid19_confirmed), "no_infection",
ifelse(!is.na(exp_date_covid19_confirmed), "non_hospitalised",
ifelse(
sub_date_covid19_hospital - exp_date_covid19_confirmed>=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed<29, "hospitalised", NA))))
table(df$sub_cat_covid19_hospital)
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(!is.na(exp_date_covid19_confirmed) &
!is.na(sub_date_covid19_hospital) &
sub_date_covid19_hospital - exp_date_covid19_confirmed>=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed<29, "hospitalised", NA))
table(df$sub_cat_covid19_hospital)
table(df2$sub_cat_covid19_hospital)
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(!is.na(exp_date_covid19_confirmed) &
!is.na(sub_date_covid19_hospital) &
sub_date_covid19_hospital - exp_date_covid19_confirmed>=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed<29, "hospitalised",
ifelse(!is.na(exp_date_covid19_confirmed), "non_hospitalised", NA)))
table(df2$sub_cat_covid19_hospital)
table(df$sub_cat_covid19_hospital)
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(!is.na(exp_date_covid19_confirmed) &
!is.na(sub_date_covid19_hospital) &
sub_date_covid19_hospital - exp_date_covid19_confirmed>=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed<29, "hospitalised",
ifelse(!is.na(exp_date_covid19_confirmed), "non_hospitalised",
is.na(exp_date_covid19_confirmed), "no_infection", NA)))
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(!is.na(exp_date_covid19_confirmed) &
!is.na(sub_date_covid19_hospital) &
sub_date_covid19_hospital - exp_date_covid19_confirmed>=0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed<29, "hospitalised",
ifelse(!is.na(exp_date_covid19_confirmed), "non_hospitalised",
ifelse(is.na(exp_date_covid19_confirmed), "no_infection", NA))))
table(df$sub_cat_covid19_hospital)
table(df2$sub_cat_covid19_hospital)
## Study start date
study_start <- "2020-01-01"
## Load dataset
df <- arrow::read_feather(file = "output/input.feather")
# Describe data --------------------------------------------------------------
sink(paste0("output/describe_input_studydefinition.txt"))
print(Hmisc::describe(df))
sink()
# Format columns -----------------------------------------------------
# dates, numerics, factors, logicals
df <- df %>%
rename(tmp_cov_max_hba1c_mmol_mol_date = tmp_cov_num_max_hba1c_mmol_mol_date) %>%
mutate(across(contains('_date'), ~ as.Date(as.character(.)))) %>%
mutate(across(contains('_birth_year'), ~ format(as.Date(.), "%Y"))) %>%
mutate(across(contains('_num'), ~ as.numeric(.))) %>%
mutate(across(contains('_cat'), ~ as.factor(.))) %>%
mutate(across(contains('_bin'), ~ as.logical(.)))
# Define COVID-19 severity --------------------------------------------------------------
df <- df %>%
mutate(sub_cat_covid19_hospital =
ifelse(!is.na(exp_date_covid19_confirmed) &
!is.na(sub_date_covid19_hospital) &
sub_date_covid19_hospital - exp_date_covid19_confirmed >= 0 &
sub_date_covid19_hospital - exp_date_covid19_confirmed < 29, "hospitalised",
ifelse(!is.na(exp_date_covid19_confirmed), "non_hospitalised",
ifelse(is.na(exp_date_covid19_confirmed), "no_infection", NA))))
table(df2$sub_cat_covid19_hospital)
table(df$sub_cat_covid19_hospital)
